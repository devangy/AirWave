// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  githubId  Int      @unique
  username  String
  avatarUrl String
  chats     ChatParticipant[]
  createdAt DateTime @default(now())
}

model Chat {
  id            String            @id @default(uuid())
  isGroup       Boolean           @default(false)
  name          String?           // for group chats
  messages      Message[]
  participants  ChatParticipant[]
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}

model Message {
  id        String   @id @default(uuid())
  content   String
  sender    ChatParticipant     @relation(fields: [senderId], references: [id])
  senderId  String
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  createdAt DateTime @default(now())
}

model ChatParticipant {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  messages  Message[]
  userId    String
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  joinedAt  DateTime @default(now())
  @@unique([userId, chatId]) // Prevent duplicate entries
}
